<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ele.project.borrow.dao.BorrowDao">
	<insert id="borrowBook" parameterType="Map">
		insert into t_borrow
		(
		 id
		,bookid
		,userid
		,borrowdate
		,returningdate
		,returneddate
		,state
		)values(
		#{id}
		,#{bookid}
		,#{userid}
		,#{borrowdate}
		,#{returningdate}
		,#{returneddate}
		,0
		)
	</insert>
	<update id="returnBook" parameterType="Map">
		update t_borrow set state=1,returneddate=#{returneddate} where id=#{id}
	</update>
	<select id="getBorrowedBookByUserOrBookId" parameterType="Map" resultType="Map">
		select b.id, 
		u.cardid,u.sex,u.totalborrow , 
		bk.callno,bk.name,bk.author,bk.type,bk.price,b.state
		from t_borrow b 
		left join t_user u on b.userid=u.id
		left join t_book bk on b.bookid=bk.id
		where 1=1 
		<if test="username!=null and username!=''">
		and u.username=#{username}
		</if>
		<if test="username!=null and username!=''">
		and bk.callno=#{callno}
		</if>
		order by bk.name
		limit #{page},#{pagesize}
	</select>
	<select id="getBorrowedBookCountByUserOrBookId" parameterType="Map" resultType="int">
		select count(1)
		from t_borrow b 
		left join t_user u on b.userid=u.id
		left join t_book bk on b.bookid=bk.id
		where 1=1 
		<if test="username!=null and username!=''">
		and u.username=#{username}
		</if>
		<if test="username!=null and username!=''">
		and bk.callno=#{callno}
		</if>
	</select>
	<select id="getCurrentBorrowedByUserid" parameterType="Map" resultType="Map">
		select b.id,b.borrowdate,b.returningdate,bk.name,bk.author,bk.callno
		from t_borrow b
		left join t_user u on u.id=b.userid
		left join t_book bk on bk.id=b.bookid
		where b.state=0 and b.userid=#{userid} order by bk.name
		limit #{page},#{pagesize} 
	</select>
	<select id="getCurrentBorrowedCountByUserid" parameterType="Map" resultType="int">
		select count(1)
		from t_borrow b
		left join t_user u on u.id=b.userid
		left join t_book bk on bk.id=b.bookid
		where b.state=0 and b.userid=#{userid}
	</select>
	<select id="getHistoricalBorrowingByUserid" parameterType="Map" resultType="Map">
		select b.id,b.borrowdate,b.returneddate,b.returningdate,bk.name,bk.author,bk.callno
		from t_borrow b
		left join t_book bk on bk.id=b.bookid
		where b.state=1 and b.userid=#{userid} order by bk.name
		limit #{page},#{pagesize} 
	</select>
	<select id="getHistoricalBorrowingCountByUserid" parameterType="Map" resultType="int">
		select count(1)
		from t_borrow b
		left join t_book bk on bk.id=b.bookid
		where b.state=1 and b.userid=#{userid}
	</select>
	<update id="updateTotalborrowToUser" parameterType="Map">
		update t_user set totalborrow=totalborrow+1 where id=#{userid}
	</update>
</mapper>